alCaRecoMatrix = { 'cosmics'     : { 'AlCaLumiPixels'      : [ 'LumiPixels', ],
                                     'Cosmics'             : [ 'TkAlCosmics0T',
                                                               'HcalCalHOCosmics',
                                                               'DtCalibCosmics',
                                                               'MuAlGlobalCosmics',
                                                               ],
                                     'ExpressCosmics'      : [ 'SiStripCalZeroBias',
                                                               'SiStripPCLHistos',
                                                               'TkAlCosmics0T',
                                                               'DtCalibCosmics',
                                                               ],
                                     'HcalHPDNoise'        : [ ],
                                     'HcalNZS'             : [ 'HcalCalIterativePhiSym',
                                                               'HcalCalMinBias',
                                                               ],
                                     'MinimumBias'         : [ 'SiStripCalZeroBias',
                                                               'TkAlMinBias',
                                                               ],
                                     'NoBPTX'              : [ ],
                                     },
                   'pp'          : { 'AlCaLumiPixels'      : [ 'LumiPixels', ],
                                     'Commissioning'       : [ 'HcalCalIsoTrk', ],
                                     'DoubleElectron'      : [ 'EcalCalZElectron',
                                                               'EcalUncalZElectron',
                                                               ],
                                     'DoubleMu'            : [ 'TkAlZMuMu',
                                                               'DtCalib',
                                                               'MuAlCalIsolatedMu',
                                                               'MuAlOverlaps',
                                                               ],
                                     'DoubleMuParked'      : [ 'TkAlZMuMu',
                                                               'DtCalib',
                                                               'MuAlCalIsolatedMu',
                                                               'MuAlOverlaps',
                                                               ],
                                     'HcalNZS'             : [ 'HcalCalMinBias', ],
                                     'MinimumBias'         : [ 'SiStripCalMinBias',
                                                               'TkAlMinBias',
                                                               ],
                                     'MuOnia'              : [ 'TkAlJpsiMuMu',
                                                               'TkAlUpsilonMuMu',
                                                               ],
                                     'MuOniaParked'        : [ 'TkAlJpsiMuMu',
                                                               'TkAlUpsilonMuMu',
                                                               ],
                                     'SingleElectron'      : [ 'EcalCalWElectron',
                                                               'EcalUncalWElectron',
                                                               ],
                                     'SingleMu'            : [ 'TkAlMuonIsolated',
                                                               'DtCalib',
                                                               'MuAlCalIsolatedMu',
                                                               'MuAlOverlaps',
                                                               ],
                                     'StreamExpress'       : [ 'SiStripCalMinBias',
                                                               'SiStripCalZeroBias',
                                                               'SiStripPCLHistos',
                                                               'TkAlMinBias',
                                                               'DtCalib',
                                                               'MuAlCalIsolatedMu',
                                                               ],
                                     'TestEnablesTracker'  : [ 'TkAlLAS', ],
                                     },
                   'cosmicsRun2' : { 'AlCaLumiPixels'      : [ 'LumiPixels', ],
                                     'Cosmics'             : [ 'TkAlCosmics0T',
                                                               'HcalCalHOCosmics',
                                                               'DtCalibCosmics',
                                                               'MuAlGlobalCosmics',
                                                               ],
                                     'ExpressCosmics'      : [ 'SiStripCalZeroBias',
                                                               'SiStripPCLHistos',
                                                               'TkAlCosmics0T',
                                                               'DtCalibCosmics',
                                                               ],
                                     'HcalHPDNoise'        : [ ],
                                     'HcalNZS'             : [ 'HcalCalIterativePhiSym',
                                                               'HcalCalMinBias',
                                                               ],
                                     'MinimumBias'         : [ 'SiStripCalZeroBias',
                                                               'TkAlMinBias',
                                                               ],
                                     'NoBPTX'              : [ ],
                                     },
                   'ppRun2'      : { 'AlCaLumiPixels'      : [ 'LumiPixels', ],
                                     'Commissioning'       : [ 'HcalCalIsoTrk', ],
                                     'Charmonium'          : [ 'TkAlJpsiMuMu', ],
                                     'DoubleEG'            : [ 'EcalCalZElectron',
                                                               'EcalUncalZElectron',
                                                               'HcalCalIterativePhiSym',
                                                               ],
                                     'DoubleMu'            : [ 'TkAlZMuMu',
                                                               'MuAlCalIsolatedMu',
                                                               'MuAlOverlaps',
                                                               'MuAlZMuMu',
                                                               ],
                                     'HcalNZS'             : [ 'HcalCalMinBias', ],
                                     'HLTPhysics'          : [ 'SiStripCalMinBias',
                                                               'TkAlMinBias',
                                                               ],
                                     'JetHT'               : [ 'HcalCalDijets', ],
                                     'MET'                 : [ 'HcalCalNoise', ],
                                     'MuOnia'              : [ 'TkAlUpsilonMuMu', ],
                                     'SingleElectron'      : [ 'EcalCalWElectron',
                                                               'EcalUncalWElectron',
                                                               'EcalCalZElectron',
                                                               'EcalUncalZElectron',
                                                               'HcalCalIterativePhiSym',
                                                               ],
                                     'SingleMu'            : [ 'TkAlMuonIsolated',
                                                               'HcalCalIterativePhiSym',
                                                               'DtCalib',
                                                               'MuAlCalIsolatedMu',
                                                               'MuAlOverlaps',
                                                               'MuAlZMuMu',
                                                               ],
                                     'SinglePhoton'        : [ 'HcalCalGammaJet', ],
                                     'StreamExpress'       : [ 'SiStripCalMinBias',
                                                               'SiStripCalZeroBias',
                                                               'SiStripPCLHistos',
                                                               'TkAlMinBias',
                                                               'DtCalib',
                                                               ],
                                     'TestEnablesEcalHcal' : [ 'HcalCalPedestals', ],
                                     'ZeroBias'            : [ 'SiStripCalZeroBias',
                                                               'TkAlMinBias',
                                                               'LumiPixelsMinBias',
                                                               ],
                                     },
                 }

def buildConcatStringOfAlCaReco( pdList, matrix ):
    """Takes a list of primary datasets (PDs)
       and the AlCaRecoMatrix entry for a scenario (a dictionary),
       and returns a string with all the AlCaRecos for the selected PDs
       separated by the '+' character without duplicates."""
    alCaRecoList = []
    for pd in pdList:
        alCaRecoList.extend( matrix[ pd ] )
    # remove duplicates converting to a set
    alCaRecoList = set( alCaRecoList )
    stringList = '+'.join( alCaRecoList )
    return stringList

# Update the lists anytime a new PD is added to the matrix
autoAlca = { 'allForExpress'            : buildConcatStringOfAlCaReco( [ 'StreamExpress' ], alCaRecoMatrix[ 'pp' ] ),
             'allForExpressCosmics'     : buildConcatStringOfAlCaReco( [ 'ExpressCosmics' ], alCaRecoMatrix[ 'cosmics' ] ),
             'allForPrompt'             : buildConcatStringOfAlCaReco( [ 'MinimumBias', 'Commissioning', 'SingleMu', 'DoubleMu', 'MuOnia', 'DoubleMuParked', 'MuOniaParked', 'SingleElectron', 'DoubleElectron', 'HcalNZS' ], alCaRecoMatrix[ 'pp' ] ),
             'allForPromptCosmics'      : buildConcatStringOfAlCaReco( [ 'Cosmics' ], alCaRecoMatrix[ 'cosmics' ] ),
             'allForExpressRun2'        : buildConcatStringOfAlCaReco( [ 'StreamExpress' ], alCaRecoMatrix[ 'ppRun2' ] ),
             'allForExpressCosmicsRun2' : buildConcatStringOfAlCaReco( [ 'ExpressCosmics' ], alCaRecoMatrix[ 'cosmicsRun2' ] ),
             'allForPromptRun2'         : buildConcatStringOfAlCaReco( [ 'Commissioning', 'SingleMu', 'DoubleMu', 'MuOnia', 'Charmonium', 'MET', 'JetHT', 'SingleElectron', 'SinglePhoton', 'DoubleEG', 'ZeroBias' ,'HLTPhysics', 'HcalNZS' ], alCaRecoMatrix[ 'ppRun2' ] ),
             'allForPromptCosmicsRun2'  : buildConcatStringOfAlCaReco( [ 'Cosmics' ], alCaRecoMatrix[ 'cosmicsRun2' ] ),
             }
#autoAlca.update(alCaRecoMatrix)
